package scoreHashMap;

import static java.lang.System.out;

import java.util.HashMap;
import java.util.Scanner;
import java.util.Set;


public class MethodClass {
	   ScoreClass DC1;                                     //레퍼런스 변수 DC1을 선언.  해당 변수는 dataclass타입의 "객체"를 가르킬수 있음.
	   
	   public void input(Scanner sc, HashMap<String, ScoreClass> dc) { //출력 메소드, 매개변수로 스캐너 "sc"와  클래스를 담은 Arraylist "dc"를 받음

	      out.println("=======데이터입력======= ");
	                                  			   //dc.size는 클래스를 담는 배열의 크기를 의미함. 0부터 시작하기에 + 1를 해줌
	      out.println("***DataClass*** 학번 : ");   //a는 Arraylist에 담길 "데이터 번호"를 의미함.
	      
	      String num = sc.nextLine();
	      DC1 = new ScoreClass(num);

	      out.println("***DataClass*** 이름 : ");
	      DC1.name = sc.nextLine();
	   
	      out.println("***DataClass*** 국어 : ");
	      String kor = sc.nextLine();
	      if( checkNum(kor)) {
	    	  DC1.kor = kor;
	      }else {
	    	  return;
	      }
      
	      out.println("***DataClass*** 영어 : ");
	      kor = sc.nextLine();
	      if( checkNum(kor)) {
	    	  DC1.eng = kor;
	      }else {
	    	  return;
	      }
	     
	      out.println("***DataClass*** 수학 : ");
	      kor = sc.nextLine();
	      if( checkNum(kor)) {
		      DC1.mat = kor;
	      }else {
	    	  return;
	      }      
      
	      out.println("=======입력  종료======= ");
	      dc.put(num,DC1);  
	      process(num,dc);
	                                  //매개변수로 받은 Arraylist dc에   dataclass의 객체 DC1을 저장 
	 
	      return;
	   }
	   
	   public boolean checkNum(String a) {
		   try { 
			   Integer.parseInt(a);
			   return true;
		   }
		   catch(java.lang.NumberFormatException e) {       //enter 등 다른 값을 입력시
		         out.println("숫자 입력.");
		       return false;
		   }
		  
	   }
	   
	   public void modify(String hashCode, HashMap<String, ScoreClass> dc, Scanner sc) { // i는 사용자가 수정 하려는 데이터 번호
	      
		  if(dc.get(hashCode)==null) {
			 out.println("해당 학번 없음.");
			 return;
		  }
	                             //그렇지 않다면  값을 수정하기 위해 새로운 dataclass객체 생성
	      String num = hashCode;
	      DC1 = new ScoreClass(num);

	      out.println("***DataClass*** 이름 : ");
	      DC1.name = sc.nextLine();
	   
	      out.println("***DataClass*** 국어 : ");
	      String kor = sc.nextLine();
	      if( checkNum(kor)) {
	    	  DC1.kor = sc.nextLine();
	      }else {
	    	  return;
	      }
      
	      out.println("***DataClass*** 영어 : ");
	      kor = sc.nextLine();
	      if( checkNum(kor)) {
	    	  DC1.eng = kor;
	      }else {
	    	  return;
	      }
	     
	      out.println("***DataClass*** 수학 : ");
	      kor = sc.nextLine();
	      if( checkNum(kor)) {
		      DC1.mat = kor;
	      }else {
	    	  return;
	      }      
	               
	      dc.put(num,DC1);                            //Arraylist에  i-1번째 데이터에 DC1으로 값 수정
	      process(hashCode,dc);   
	      out.println("=======수정  종료======= ");
	      return;
	   }
	   
	   public void process(String hashCode,HashMap<String, ScoreClass> dc) {
		   int kor = Integer.parseInt((dc.get(hashCode).kor));
		   int eng = Integer.parseInt((dc.get(hashCode).eng));
		   int mat = Integer.parseInt((dc.get(hashCode).mat));
		   int tot = kor + eng + mat;
		   float avg = tot/3.f;
		   DC1.tot = Integer.toString(tot);
		   DC1.avg = Float.toString(avg);
	   }
	   
	   public void search(String hashCode,  HashMap<String, ScoreClass> dc, Scanner sc) { // i는 사용자가 수정 하려는 데이터 번호
	      
	      out.println("=======데이터조회======= ");
	      if(!(dc.get(hashCode)==null)) {
	    	  
	         printMethode(hashCode,dc);                         //printMEthode 메소드 호출
	      }else {
	    	    out.println("해당 데이터는 존재 하지 않음.");
	      }
	    
	      out.println("=======조회   종료======= ");
	      return;
	   }
	   
	   public void output(HashMap <String, ScoreClass> dc) {
	      Set<String> keySetdata = dc.keySet();
	      out.println("=======데이터출력======= ");
	      for(String a : keySetdata) {
	         printMethode(a, dc);                     //printMEthode 메소드 호출
	      }
	      out.println("=======출력   종료======= ");
	      return;
	   }
	   
	   private void printMethode(String hasCode,  HashMap<String, ScoreClass> dc) { // 데이터를 출력하는 메소드
	      if(!(dc.get(hasCode)==null)) {
	         DC1 = dc.get(hasCode);                                 //필드 DC1에 ArrayList dc의 i번째 dataclass 객체를 삽입.
	         out.printf("\n***학번 : %2s***\n"
	               + "이름 : %2s\n"
	               + "국어 : %2s\n"
	               + "영어 : %2s\n"
	               + "수학 : %2s\n"
	               + "총점 : %2s\n"
	               + "평균 : %2s\n"
	               ,
	               DC1.num, DC1.name, DC1.kor,       // DC1이 가르키는 객체의 필드를 출력
	               DC1.eng, DC1.mat, DC1.tot, DC1.avg );    
	      }
	      else {
	         out.println("해당 데이터는 존재 하지 않음.");
	      }
	      
	      return;
	   }
	   
	   public void delete(String hashCode,  HashMap<String, ScoreClass> dc) {
	      out.println("=======데이터삭제======= ");
	      
	      if(!(dc.get(hashCode) ==null)) {
	    	  dc.remove(hashCode);
	      }else {
	    	  out.println("해당 데이터는 존재 하지 않음.");
	      }
	      
	      out.println("=======삭제   완료======= ");
	      return;
	   }
	   
	   public void ChooseGrade(String hashCode, HashMap<String, ScoreClass> dc) {
		   float a = Float.parseFloat(dc.get(hashCode).avg);
		   switch()
	   }

}
