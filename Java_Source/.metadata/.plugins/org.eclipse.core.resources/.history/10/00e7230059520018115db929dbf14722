package miniProject;

import static java.lang.System.out;

import java.util.ArrayList;
import java.util.Scanner;

public class Method {
   
   DataClass DC1;                                           //레퍼런스 변수 DC1을 선언.  해당 변수는 dataclass타입의 "객체"를 가르킬수 있음.
   
   public void input(Scanner sc, ArrayList<DataClass> dc) { //출력 메소드, 매개변수로 스캐너 "sc"와  클래스를 담은 Arraylist "dc"를 받음
      DC1 = new DataClass();                         // dataclass의 인스턴스 DC1 생성(객체를 생성)
      
      out.println("=======데이터입력======= ");
      
      int a =dc.size() + 1;                              //dc.size는 클래스를 담는 배열의 크기를 의미함. 0부터 시작하기에 + 1를 해줌
      out.println("***DataClass"+ (a) + "*** 제목 : ");   //a는 Arraylist에 담길 "데이터 번호"를 의미함.
      DC1.data1= sc.nextLine();                       //DC1의 필드에 data1에 값을 저장

      out.println("***DataClass"+ (a) + "*** 저자 : ");
      DC1.data2= sc.nextLine();
   
      out.println("***DataClass"+ (a) + "*** 출판사 : ");
      DC1.data3= sc.nextLine();
   
      out.println("***DataClass"+ (a) + "*** 주제 : ");
      DC1.data4= sc.nextLine();
   
      out.println("***DataClass"+ (a) + "*** 줄거리 : ");
      DC1.data5= sc.nextLine();
      
      out.println("***DataClass"+ (a) + "*** 기억남는 글귀 : ");
      DC1.data6= sc.nextLine();
      
      out.println("***DataClass"+ (a) + "*** 점수 (1~5 입력): ");
      DC1.data7= sc.nextLine();
      
      while(   !(DC1.data7.equals("0"))&&
            !(DC1.data7.equals("1"))&&
            !(DC1.data7.equals("2"))&&
            !(DC1.data7.equals("3"))&&
            !(DC1.data7.equals("4"))&&
            !(DC1.data7.equals("5"))
           ) 
      {
         out.println("점수는 숫자 1에서 5의 정수 입력): ");
         DC1.data7= sc.nextLine();
      }
      
      
      out.println("=======입력  종료======= ");
      
      dc.add(DC1);                              //매개변수로 받은 Arraylist dc에   dataclass의 객체 DC1을 저장 
      DC1 = null;                                 //DC1 -> 객체를 가르키는 변수. 변수 값을 null로 두면 더 이상 객체를 가르키지 못함. 해당 객체는 쓰레기 값이 됨. -> 메모리 자동 수거
      return;
   }
   
   public void modify(int i, ArrayList<DataClass> dc, Scanner sc) { // i는 사용자가 수정 하려는 데이터 번호
      
      if(dc.size() < i) {                           //i가 저장된 데이터의 범위를 초가하면 
         out.println("해당 데이터는 존재 하지 않음.");         //해당 구문이 실행
         return;                                 //종료
      }
      
      DC1 = new DataClass();                        //그렇지 않다면  값을 수정하기 위해 새로운 dataclass객체 생성

      out.println("***DataClass"+ i +"*** 제목 : ");
      DC1.data1= sc.nextLine();

      out.println("***DataClass"+ i +"*** 저자 : ");
      DC1.data2= sc.nextLine();
   
      out.println("***DataClass"+ i +"*** 출판사 : ");
      DC1.data3= sc.nextLine();
   
      out.println("***DataClass"+ i +"*** 주제 : ");
      DC1.data4= sc.nextLine();
   
      out.println("***DataClass"+ i +"*** 줄거리 : ");
      DC1.data5= sc.nextLine();
      
      out.println("***DataClass"+ i +"*** 기억남는 글귀 : ");
      DC1.data6= sc.nextLine();
      
      out.println("***DataClass"+ i + "*** 점수 (1~5 입력): ");
      DC1.data7= sc.nextLine();
      
      while(   !(DC1.data7.equals("0"))&&
            !(DC1.data7.equals("1"))&&
            !(DC1.data7.equals("2"))&&
            !(DC1.data7.equals("3"))&&
            !(DC1.data7.equals("4"))&&
            !(DC1.data7.equals("5"))
           ) 
      {
         out.println("점수는 숫자 1에서 5의 정수 입력): ");
         DC1.data7= sc.nextLine();
      }
      
      dc.set(i-1,DC1);                                   //Arraylist에  i-1번째 데이터에 DC1으로 값 수정
      DC1= null;                                 //DC1 -> 객체를 가르키는 변수. 변수 값을 null로 두면 더 이상 객체를 가르키지 못함. 해당 객체는 쓰레기 값이 됨. -> 메모리 자동 수거
   
      out.println("=======수정  종료======= ");
      return;
   }
   
   public void search(int i, ArrayList<DataClass> dc, Scanner sc) { // i는 사용자가 수정 하려는 데이터 번호
      
      out.println("=======데이터조회======= ");
      try 
      {
         printMethode(i-1,dc);                         //printMEthode 메소드 호출
      }
      catch(java.lang.IndexOutOfBoundsException e)      //ArrayList의 범위를 초과시
      {
         out.println("해당 데이터는 존재 하지 않음.");

      }
      catch(java.lang.NumberFormatException e) {       //enter 등 다른 값을 입력시
         out.println("해당 데이터는 존재 하지 않음.");
      }

      out.println("=======조회   종료======= ");
      return;
   }
   
   public void output(ArrayList<DataClass> dc) {
      
      out.println("=======데이터출력======= ");
      for(int j = 0; j < dc.size(); j ++) {
         printMethode(j, dc);                     //printMEthode 메소드 호출
      }
      out.println("=======출력   종료======= ");
      return;
   }
   
   private void printMethode(int i, ArrayList<DataClass> dc) { // 데이터를 출력하는 메소드
      try 
      {
         DC1 = dc.get(i);                                 //필드 DC1에 ArrayList dc의 i번째 dataclass 객체를 삽입.
         out.printf("\n***제목 : %2s***\n"
               + "저자 : %2s\n"
               + "출판사 : %2s\n"
               + "주제 : %2s\n"
               + "줄거리 : %2s\n"
               + "기억에 남는 글귀 : %2s\n"
               ,
               DC1.data1, DC1.data2, DC1.data3,       // DC1이 가르키는 객체의 필드를 출력
               DC1.data4, DC1.data5, DC1.data6 );
         
         out.printf("점수 : ");
         
         int starNum = Integer.parseInt(DC1.data7);
         
         if(starNum == 0) {
            out.print("☆\n\n");
            return;
         }
         for(int k = 1; k <= starNum ; k++ ) {
            
            out.print("★");
         }
         out.print("\n\n");
         
      }
      catch(java.lang.IndexOutOfBoundsException e)
      {
         out.println("해당 데이터는 존재 하지 않음.");
         DC1= null;
      }
      catch(java.lang.NumberFormatException e) {
         out.println("해당 데이터는 존재 하지 않음.");
      }
      finally 
      {
         DC1= null;      //DC1 -> 객체를 가르키는 변수. 변수 값을 null로 두면 더 이상 객체를 가르키지 못함. 해당 객체는 쓰레기 값이 됨. -> 메모리 자동 수거
      }
      
      return;
   }
   
   
   public void delete(int i, ArrayList<DataClass> dc) {
      out.println("=======데이터삭제======= ");
      try 
      {
         dc.remove(i-1);     //사용자가 원하는 i번째 데이터를 삭제함
      }
      catch(java.lang.IndexOutOfBoundsException e)
      {
         out.println("해당 데이터는 존재 하지 않음.");
         DC1= null;
      }
      catch(java.lang.NumberFormatException e) {
         out.println("해당 데이터는 존재 하지 않음.");
      }
      finally 
      {
         DC1= null;
      }
      
      out.println("=======삭제   완료======= ");
      return;
   }

}